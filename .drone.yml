---
kind: pipeline
type: docker
name: roguelearn-user-api

# Global environment variables (equivalent to Woodpecker variables)
environment:
  IMAGE_NAME: soybean2610/roguelearn-user-api
  DOCKERFILE_PATH: ./src/RogueLearn.User.Api/Dockerfile
  K8S_IMAGE_NAME: soybean2610/roguelearn-user-api
  K8S_REPO_URL: https://github.com/FA25SE050-RogueLearn/RogueLearn.Kubernetes.git
  K8S_MANIFEST_PATH: roguelearn-user-api/base
  ARGOCD_APP_NAME: roguelearn-user-api

# Trigger conditions
trigger:
  branch:
    - main
  event:
    - push
    - pull_request

steps:
  # Build and test the application
  - name: build-test
    image: mcr.microsoft.com/dotnet/sdk:9.0
    commands:
      - dotnet restore
      - dotnet build --configuration Release --no-restore
      - dotnet test --configuration Release --no-build --verbosity normal

  # Build Docker image (dry run for pull requests)
  - name: docker-build
    image: plugins/docker
    settings:
      repo: ${IMAGE_NAME}
      dockerfile: ${DOCKERFILE_PATH}
      context: .
      tags:
        - ${DRONE_COMMIT_SHA:0:8}
        - latest
        - ${DRONE_BRANCH}
      dry_run: true
    depends_on:
      - build-test
    when:
      event:
        - pull_request

  # Push Docker image to DockerHub (only on main branch push)
  - name: docker-push
    image: plugins/docker
    settings:
      registry: docker.io
      repo: ${IMAGE_NAME}
      dockerfile: ${DOCKERFILE_PATH}
      context: .
      tags:
        - ${DRONE_COMMIT_SHA:0:8}
        - latest
        - ${DRONE_BRANCH}
      username:
        from_secret: harbor_username
      password:
        from_secret: docker_password
    depends_on:
      - build-test
    when:
      branch:
        - main
      event:
        - push

  # Update Kubernetes manifests with new image tag
  - name: update-k8s-manifests
    image: alpine/k8s:1.28.4
    environment:
      GIT_USERNAME:
        from_secret: git_username
      GIT_TOKEN:
        from_secret: git_token
    commands:
      # 1. Clone the repo (we will push to this URL later)
      - git clone https://github.com/FA25SE050-RogueLearn/RogueLearn.Kubernetes.git k8s-manifests
      - cd k8s-manifests
      - git config user.name "Drone CI"
      - git config user.email "anhphmse183496@fpt.edu.vn"
      
      # 2. --- BEST PRACTICE AUTH SETUP ---
      # Configure git to use a credential store file.
      - git config credential.helper "store --file=/root/.git-credentials"
      # Write the credentials to the file. Git will now use this automatically.
      - echo "https://$(echo $GIT_USERNAME):$(echo $GIT_TOKEN)@github.com" > /root/.git-credentials
      
      # 3. CD into the base and run kustomize
      - cd roguelearn-user-api/base
      - kustomize edit set image soybean2610/roguelearn-user-api=soybean2610/roguelearn-user-api:${DRONE_COMMIT_SHA:0:8}
      - cd ../.. # Go back to the repo root
      
      # 4. Commit and push. The push command is now clean and secure.
      - git add .
      - |
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "ci: Update image for roguelearn-user-api to ${DRONE_COMMIT_SHA:0:8}"
          # The URL no longer needs credentials inline! Git will find them in the credential store.
          git push
        fi
    depends_on:
      - docker-push
    when:
      branch:
        - main
      event:
        - push

  # Optional: Trigger ArgoCD sync (if ArgoCD API is accessible)
  - name: argocd-sync
    image: quay.io/argoproj/argocd:v2.8.0
    environment:
      ARGOCD_SERVER:
        from_secret: argocd_server
      ARGOCD_AUTH_TOKEN:
        from_secret: argocd_auth_token
      ARGOCD_APP_NAME: ${ARGOCD_APP_NAME}
    commands:
      - |
        if [ -n "${ARGOCD_SERVER}" ] && [ -n "${ARGOCD_AUTH_TOKEN}" ]; then
          argocd login ${ARGOCD_SERVER} --auth-token ${ARGOCD_AUTH_TOKEN} --insecure
          argocd app sync ${ARGOCD_APP_NAME} --prune
          argocd app wait ${ARGOCD_APP_NAME} --timeout 300
        else
          echo "ArgoCD sync skipped - credentials not provided"
        fi
    depends_on:
      - update-k8s-manifests
    failure: ignore
    when:
      branch:
        - main
      event:
        - push

  # Notification step
  - name: notify
    image: plugins/github-comment
    settings:
      api_key:
        from_secret: github_token
      message: |
        {{#success build.status}}
        ## ‚úÖ Deployment Successful!
        
        **Repository:** {{repo.name}}  
        **Image Tag:** `{{build.commit | truncate 8 ""}}`  
        **Branch:** `{{build.branch}}`  
        **Author:** {{build.author}}  
        
        üîó [View Build Details]({{build.link}})
        {{else}}
        ## ‚ùå Deployment Failed!
        
        **Repository:** {{repo.name}}  
        **Branch:** `{{build.branch}}`  
        **Author:** {{build.author}}  
        
        üîó [View Build Details]({{build.link}})
        {{/success}}
    depends_on:
      - argocd-sync
    when:
      branch:
        - main
      event:
        - push
      status:
        - success
        - failure